Clonar un repositorio y crear el acceso remoto:
    2- git clone [url del repositorio]
    3- cd [tab para ingresar a la carpeta] ya cuando nos encontremos dentro nos mostrara la rama en la que estamos 


Crear un pull request = enviar una actualizaci√≥n a repositorio original
    1- cd [carpeta contendedora]
    2- cd [nombre del repositorio]
    3- git add .
    4- git commit -m "[nombre del commit]"
    5- git push origin [rama]
    6- realizar pull request en GitHub
        6.1- [Repositorio original] [rama] <- [Repositorio secundario] [rama]
        6.2- Crear pull request


*--------------------------------------------------

git clone
cd  
git pull origin main // esta es una opcion adicional 
git checkout "nombre de la rama" //este comando es para pasarse a la rama que queremos
git pull origin main // ya con esto ya nos pasamos a nuestra rama 


----------------------------------------------------------------------------

compilacion de programa 
*carpeta COMPONENTES
	-CONSULTAS
	-REPORTEADOR
	-SEGURIDAD // despues de comentar y compilar pasamos al 
	-NAVEGADOR

*carpeta MODULOS / Menus
	-interfac_V3 // aqui comentamos los modulos por un momento //luego nos regresamos a seguridad y presionamos control z esto para descomentar lo que comentamos, luego agregamos la referencia en capa vista de v3

compilamos los MODULOS
	-BANCOS
	-COMERCIAL (COMPRAVENTA) //aqui genera unos errores solo compilamos y lo cerramos
	-CONTABILIDAD //se generan errores pero igual que el anterior solo compilamos y cerramos 
	-CUENTAS CORRIENTES //se generan errores pero igual que el anterior solo compilamos y cerramos
	-LOGISTICA 
	-NOMINAS
	-PRODUCCION 

//luego de compilar todo en interfac_V3, presionamos control z para descomentar todo lo que comentamos luego compilamos // si, se sigue generando errores solo comntamos esto por referencias individuales de cada grupo y compilamos 
// en seguridad se debe de compilar para que reconosca el interfac_v3


contrase√±a HO0aGo4nM94=

---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------

git 
git clone
cd + tab (para acceder al main)
git pull origin main (Actualizar el repositorio)
git checkout (aqui va el nombre de la rama) (este comando es para acceder ala rama)

-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
1. Listar ramas existentes
--------------------------
git branch  (Muestra todas las ramas locales del repositorio.)

---------------------------------------------------
2. Crear una nueva rama
-----------------------
git branch nombre_rama (Crea una nueva rama, pero no cambia a ella autom√°ticamente.)

------------------------------------------------------------------------------------------------

3. Emininar ua rama
--------------------
git branch -d nombre_rama

-----------------------------------------------------

4.Renombrar una rama
---------------------
git branch -m nuevo_nombre (Si est√°s en la rama que quieres renombrar)

-----------------------------------------------------------------------------------

git status

(Esto mostrar√° un resumen del estado del repositorio, 
 indicando qu√© archivos han cambiado, cu√°les est√°n listos
 para ser confirmados y si hay archivos sin seguimiento.)



-------------------------------------------------------------------------------------------------------------------------
bash
Copiar
Editar
-------------------------------------------------------------------------------------------------------------------------
MODULOS...
contabilidad 
nominas
comecioal
logistica

--------------------------------------------------------------------------

Base de datos:
  1. LDD
  2. LMD

----------------------------------------------------------------------------------------------------------------------------------------

* Si quieres conservar tus cambios y luego hacer pull (Guarda temporalmente los cambios sin comprometerlos en el historial de Git:)
         git stash

Luego intenta de nuevo el git pull:
        git pull origin main

Despu√©s, recupera los cambios guardados:
        git stash pop

* Si quieres descartar tus cambios locales y actualizar directamente (Advertencia: Esto eliminar√° cualquier modificaci√≥n local no guardada.)
        git reset --hard HEAD
        git pull origin main

------------------------------------------------------------------------------------------------------------------------------------------------------------------

No tendr√°s ning√∫n problema si decides no recuperar los cambios guardados con git stash pop.
Cuando haces git stash, Git guarda tus cambios en una "pila" temporal y limpia tu √°rea de trabajo. Si despu√©s decides que ya no los necesitas, simplemente puedes ignorarlos.
Si quieres asegurarte de que los cambios guardados no ocupen espacio innecesario, puedes eliminar el stash con:
              
                   git stash drop

O si hiciste varios stash y quieres limpiar todos, usa:

                   git stash clear

Entonces, si solo haces git stash y luego git pull origin main sin recuperarlos, no habr√° problema. üöÄ

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

üü°üü¢‚≠êüåü git pull origin main (se utiliza para actualizar tu rama local con los √∫ltimos cambios realizados en la rama main del repositorio remoto llamado origin)












